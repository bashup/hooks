#!/usr/bin/env bash

hook.before()  { hook.quote-args REPLY "${@:2}"; hook.eval-before  "$1" "$REPLY"; }
hook.after()   { hook.quote-args REPLY "${@:2}"; hook.eval-after   "$1" "$REPLY"; }
hook.without() { hook.quote-args REPLY "${@:2}"; hook.eval-without "$1" "$REPLY"; }
hook.around()  {
    hook.body "$1"; local original=$REPLY
    hook.body "$2"; local wrapper=$REPLY
    eval "$1() ${wrapper/#{/{ $3() $original}"
}

hook.quote-args()   { printf -v "$1" ' %q' "${@:2}"; }
hook.eval-before()  { hook.body "$1" "{ $2" "}";  eval "$1() $REPLY"; }
hook.eval-after()   { hook.body "$1" "{" "$2 ;}"; eval "$1() $REPLY"; }
hook.eval-without() {
    eval $'hook.__tmp() {\n'"$2"$'\n}'
    hook.body hook.__tmp "" ""
    set -- "$1" "${REPLY%$'\n'}"
    unset -f hook.__tmp
    hook.body "$1"
    while [[ $REPLY =~ "$2"\;?' '*$'\n' ]]; do
        REPLY=${REPLY//"$BASH_REMATCH"/$'\n'}
    done
    eval "$1() $REPLY"
}

hook.body() {
    REPLY=$(declare -f $1); REPLY="${2-{}${REPLY#*{ }"; REPLY="${REPLY%\}*}${3-\}}"
}

